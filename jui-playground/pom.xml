<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>com.effacy.jui</groupId>
    <artifactId>parent</artifactId>
    <version>${revision}</version>
    <relativePath>..</relativePath> 
  </parent>
  <artifactId>jui-playground</artifactId>
  <packaging>jar</packaging>
  <name>JUI Stack - Playground</name>

  <properties>
    <version.charba>6.3</version.charba>
    <version.plantuml>1.2023.12</version.plantuml>
  </properties>

  <dependencies>
    <dependency>
      <groupId>com.effacy.jui</groupId>
      <artifactId>jui-ui</artifactId>
      <version>${revision}</version>
    </dependency>
    <dependency>
      <groupId>com.effacy.jui</groupId>
      <artifactId>jui-text</artifactId>
      <version>${revision}</version>
    </dependency>
    <dependency>
      <groupId>org.pepstock</groupId>
      <artifactId>charba</artifactId>
      <version>${version.charba}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
      <version>${version.spring-boot}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-thymeleaf</artifactId>
      <version>${version.spring-boot}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-validation</artifactId>
      <version>${version.spring-boot}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-tx</artifactId>
      <version>${version.springframework}</version>
    </dependency>

    <dependency>
      <groupId>net.sourceforge.plantuml</groupId>
      <artifactId>plantuml-lgpl</artifactId>
      <version>${version.plantuml}</version>
    </dependency>

    <!-- TEST SCOPE -->
    <dependency>
      <groupId>com.effacy.jui</groupId>
      <artifactId>jui-test</artifactId>
      <version>${revision}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-test-autoconfigure</artifactId>
      <version>${version.spring-boot}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-test</artifactId>
      <version>${version.springframework}</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>junit</groupId>
          <artifactId>junit</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
  </dependencies>

  <build>
    <sourceDirectory>src/main/java</sourceDirectory>
    <resources>
      <resource>
        <!-- General resources -->
        <directory>src/main/resources</directory>
        <!-- This is important otherwise you may find some substitutions in -->
        <!-- the JUI code happening (i.e. with Charba). -->
        <filtering>false</filtering>
        <excludes>
          <exclude>gwt-unitCache/**/*</exclude>
        </excludes>
      </resource>
    </resources>
    <testSourceDirectory>src/it/java</testSourceDirectory>
    <testResources>
      <testResource>
        <directory>src/it/resources</directory>
        <filtering>false</filtering>
      </testResource>
    </testResources>
    
    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>add-source</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>add-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>src/jui/java</source>
                <source>src/jui/resources</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- JUI compilation to make available for dev -->
      <plugin>
        <groupId>com.effacy.jui</groupId>
        <artifactId>jui-maven-plugin</artifactId>
        <version>${revision}</version>
        <executions>
          <execution>
            <phase>compile</phase>
            <goals>
              <goal>compile</goal>
            </goals>
            <configuration>
              <module>com.effacy.jui.playground.PlaygroundApp</module>
              <jvmArgs>-Xmx4096M,-Xss1024k</jvmArgs>
              <style>OBF</style>
              <webappDirectory>${basedir}/src/main/resources/static</webappDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Copy JUI compiled resources for packaging -->
      <plugin> 
        <artifactId>maven-resources-plugin</artifactId>
        <executions>
          <execution> 
            <id>copy-jui-assets</id>
            <phase>compile</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${basedir}/target/classes/static</outputDirectory>
              <resources>          
                <resource>
                  <directory>${basedir}/src/main/resources/static</directory>
                  <filtering>false</filtering>
                </resource>
              </resources>              
            </configuration>            
          </execution>
        </executions>
      </plugin>

      <!-- Copy docs for packaging -->
      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>${version.maven-antrun-plugin}</version>
        <executions>
          <execution>
            <id>copy-jui-docs</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                <mkdir dir="${basedir}/target/classes/docs" />
                <copy todir="${basedir}/target/classes/docs">
                  <fileset dir="${basedir}/../docs" />
                </copy>
              </target>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Use to make the JAR executable -->
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <configuration>
          <mainClass>com.effacy.jui.playground.PlaygroundApp</mainClass>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>repackage</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
    
  </build>

  <profiles>
    <!-- Runs the codeserver for this project -->
    <profile>
      <id>codeserver</id>
      <build>
        <plugins>
          <plugin>
            <groupId>com.effacy.jui</groupId>
            <artifactId>jui-maven-plugin</artifactId>
            <version>${revision}</version>
            <configuration>
              <module>com.effacy.jui.playground.PlaygroundApp</module>
              <jvmArgs>-Xmx3g</jvmArgs>
              <diagnose>false</diagnose>
              <sources>
                <source>src/jui/java</source>
                <source>src/jui/resources</source>
                <!-- We include target/classes to gain access to rebind classes. -->
                <source>../jui-platform/src/main/java</source>
                <source>../jui-platform/src/main/resources</source>
                <source>../jui-core/src/main/resources</source>
                <source>../jui-core/src/main/java</source>
                <source>../jui-core/target/classes</source>
                <source>../jui-core/target-ide/classes</source>
                <source>../jui-ui/src/main/java</source>
                <source>../jui-ui/src/main/resources</source>
                <source>../jui-ui/target/classes</source>
                <source>../jui-ui/target-ide/classes</source>
                <source>../jui-validation/src/main/java</source>
                <source>../jui-validation/src/main/resources</source>
                <source>../jui-validation/target/classes</source>
                <source>../jui-validation/target-ide/classes</source>
                <source>../jui-text/src/main/java</source>
                <source>../jui-text/src/main/resources</source>
                <source>../jui-text/target/classes</source>
                <source>../jui-text/target-ide/classes</source>
                <source>../jui-remoting/src/main/java</source>
                <source>../jui-remoting/src/main/resources</source>
                <source>../jui-remoting/target/classes</source>
                <source>../jui-remoting/target-ide/classes</source>
                <source>../jui-text/src/main/java</source>
                <source>../jui-text/src/main/resources</source>
                <source>../jui-text/target/classes</source>
                <source>../jui-text/target-ide/classes</source>
              </sources>
              <inclusions>
                <inclusion>org.pepstock:charba:*</inclusion>
              </inclusions>
              <exclusions>
                <!-- These are included by default so need to explicily exclude -->
                <!-- (they are included by the sources above). -->
                <exclusion>com.effacy.jui:*:*</exclusion>
              </exclusions>
            </configuration>
            <executions>
              <execution>
                <id>codeserver</id>
                <phase>initialize</phase>
                <goals>
                  <goal>codeserver</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>


</project>
