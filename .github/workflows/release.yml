name: Publish package to the Maven Central Repository
on:
  workflow_dispatch:
  release:
    types: 
      - created
jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Maven Central Repository
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
          server-id: central
          server-username: MAVEN_USERNAME
          server-password: MAVEN_CENTRAL_TOKEN
          gpg-private-key: ${{ secrets.GPG_SIGNING_KEY }}
          gpg-passphrase: MAVEN_GPG_PASSPHRASE

      - name: Validate release tag format
        run: |
          TAG_NAME="${{ github.event.release.tag_name }}"
          if [[ ! "$TAG_NAME" =~ ^version/[0-9]+\.[0-9]+\.[0-9]+([.-][A-Za-z0-9]+)*$ ]]; then
            echo "Error: Tag name '$TAG_NAME' does not match the required format 'version/X.Y.Z[.*]'"
            exit 1
          fi
          echo "Tag name '$TAG_NAME' is valid."

      - name: Extract revision from tag
        run: |
          TAG_NAME="${{ github.event.release.tag_name }}"
          REVISION="${TAG_NAME#version/}"
          echo "REVISION=$REVISION" >> $GITHUB_ENV
          echo "Extracted revision: $REVISION"

      #- name: Publish package (GitHub packages)
        #run: |
        #  REPO="github::default::https://maven.pkg.github.com/${GITHUB_REPOSITORY}"
        #  mvn --batch-mode deploy -Drevision=${{ env.REVISION }} -DaltReleaseDeploymentRepository="${REPO}" -DaltSnapshotDeploymentRepository="${REPO}"
        #env:
        #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Release artefacts (Maven Central)
        run: |
          mvn --batch-mode -Prelease -Drevision=${{ env.REVISION }} deploy
        env:
          MAVEN_USERNAME: ${{ secrets.CENTRAL_TOKEN_USERNAME }}
          MAVEN_CENTRAL_TOKEN: ${{ secrets.CENTRAL_TOKEN_PASSWORD }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.GPG_SIGNING_KEY_PASSWORD }}
